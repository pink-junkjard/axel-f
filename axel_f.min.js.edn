{:output-to "js/min/axel_f.min.js"
 :output-dir "js/min"
 :optimizations :advanced
 :source-map "js/min/axel_f.js.map"
 :main "axel_f.api"
 :aot-cache true
 :compiler-stats true
 :pretty-print  false
 :elide-asserts true
 :parallel-build true
 :checked-arrays :warn
 :static-fns true
 :fn-invoke-direct true
 :warnings {:fn-deprecated false}
 :optimize-constants true
 :output-wrapper "/**
 * Axel-f v0.1.0
 *
 * Copyright 2018-2019 Xapix GmbH
 *
 * Licensed under Eclipse Public License;
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://github.com/xapix-io/axel-f/blob/master/LICENSE
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an \"AS IS\" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function (definition) {
    // This file will function properly as a <script> tag, or a module
    // using CommonJS and NodeJS or RequireJS module formats. In
    // Common/Node/RequireJS, the module exports the mori API and when
    // executed as a simple <script>, it creates a mori global
    // instead.

    // Wrapper gratefully adapted from:
    // https://github.com/kriskowal/q/blob/v1/q.js
    // https://github.com/swannodette/mori/blob/master/support/wrapper.js
    // https://github.com/tonsky/datascript/tree/master/release-js

    // CommonJS
    if (typeof exports === \"object\") {
        module.exports = definition();

    // RequireJS
    } else if (typeof define === \"function\" && define.amd) {
        define(definition);

    // <script>
    } else {
        axel_f = definition();
    }
})(function () {
    return function () {

        %s
        return this.axel_f.api;

    }.call({});

});"}
